--1 BROKERS--

CREATE OR REPLACE TABLE BROKERS
(
BROKER_ID VARCHAR,
BROKER_CODE VARCHAR,
BROKER_NAME VARCHAR,
DISTRIBUTION_NETWORK VARCHAR,
DISTRIBUTION_CHANNEL VARCHAR,
COMMISSION_SCHEME VARCHAR
);

SELECT * FROM BROKERS;
SELECT COUNT(*) FROM BROKERS;

--2 PRODUCTS--

CREATE OR REPLACE TABLE PRODUCTS
(
PRODUCT_NUMBER VARCHAR,
PRODUCT_CATEGORY VARCHAR,
PRODUCT_SUBCATEGORY VARCHAR,
PRODUCT_ID VARCHAR
);
SELECT * FROM PRODUCTS;

--3 REGIONS--

CREATE OR REPLACE TABLE REGIONS
(
ID_NUMBER VARCHAR,
REGION_NAME VARCHAR,
REGION_COUNTY VARCHAR,
STATE_CODE VARCHAR,
STATE VARCHAR,
TYPE VARCHAR,
LATITUDE VARCHAR,
LONGITUDE VARCHAR,
AREA_CODE VARCHAR,
POPULATION VARCHAR,
HOUSE_HOLD VARCHAR,
MEDIAN_INCOME VARCHAR,
LAND_AREA VARCHAR,
WATER_AREA VARCHAR,
TIME_ZONE VARCHAR
);

SELECT * FROM REGIONS;

--4 CUSTOMERS--

CREATE OR REPLACE TABLE CUSTOMERS
(
CUSTOMER_ID VARCHAR,
LAST_NAME VARCHAR,
FIRST_NAME VARCHAR,
DOB VARCHAR,
GENDER VARCHAR,
PARTICIPANT_TYPE VARCHAR,
REGION VARCHAR,
MARITAL_STATUS VARCHAR
);
SELECT * FROM CUSTOMERS;

---5 STATE REGIONS--

CREATE OR REPLACE TABLE STATE_REGIONS
(
STATE_CODE VARCHAR,
STATE VARCHAR,
REGION VARCHAR
);

SELECT * FROM STATE_REGIONS;

--6 PRIORITIES--

CREATE OR REPLACE TABLE PRIORITIES
(
ID CHAR,
DESCRIPTION VARCHAR
);

SELECT * FROM PRIORITIES;

--7 STATUS--

CREATE OR REPLACE TABLE STATUS
(
ID CHAR,
DESCRIPTION VARCHAR
);
SELECT * FROM STATUS;

--8 CATEGORIES--
CREATE OR REPLACE TABLE CATEGORIES
(
ID VARCHAR,
DESCRIPTION VARCHAR,
ACTIVE_STATUS VARCHAR
);
SELECT * FROM CATEGORIES;

--9 SOURCE--

CREATE OR REPLACE TABLE SOURCES
(
ID CHAR,
DESCRIPTION VARCHAR
);
SELECT * FROM SOURCES;

--10 TYPES--
CREATE OR REPLACE TABLE TYPES
(
ID VARCHAR,
DESCRIPTION VARCHAR
);

SELECT * FROM TYPES;
--11 CUSTOMER COMPLAINTS--

CREATE OR REPLACE TABLE COMPLAINT_DATA
(ID VARCHAR,
COMPLAINT_DATE STRING,
COMPLETION_DATE STRING,
CUSTOMER_ID VARCHAR,
BROKER_ID VARCHAR,
PRODUCT_ID VARCHAR,
CPT_PRIORITY_ID VARCHAR,
CPT_TYPE_ID VARCHAR,
CPT_SOURCE_ID VARCHAR,
CPT_CATEGORY_ID VARCHAR,
CPT_STATUS VARCHAR,
ADMN_ID VARCHAR,
CLIENT_STATISFACTION VARCHAR,
REIMBURSEMENT VARCHAR
);
SELECT * FROM COMPLAINT_DATA;

--12 STATUS HISTORY DATA--

CREATE OR REPLACE TABLE STATUS_HISTORY
(
ID VARCHAR,
COMPLAINT_ID VARCHAR,
COMPLAINT_STATUS VARCHAR,
STATUS_DATE STRING
);

SELECT * FROM STATUS_HISTORY;

--FINAL TABEL JOINED TOGETHER--

CREATE OR REPLACE TABLE SS_COMPLAINTS_DATA AS
SELECT CD.ID,CD.COMPLAINT_DATE,CD.COMPLETION_DATE,
CD.CUSTOMER_ID,CUS.LAST_NAME,CUS.FIRST_NAME,CUS.DOB,CUS.GENDER,CUS.REGION,REG.REGION_NAME,REG.REGION_COUNTY,REG.STATE,
CD.BROKER_ID,BR.BROKER_CODE,BR.BROKER_NAME,
CD.PRODUCT_ID,PR.PRODUCT_CATEGORY,PR.PRODUCT_SUBCATEGORY,PR.PRODUCT_ID AS PRODUCT,
CD.CPT_PRIORITY_ID,PS.DESCRIPTION AS PRIORITY_DESCRIPTION,CD.CPT_TYPE_ID,TY.DESCRIPTION AS TYPE_DESCRIPTION,
CD.CPT_SOURCE_ID,SS.DESCRIPTION AS SOURCE_DESCRIPTION,CD.CPT_CATEGORY_ID,CAT.DESCRIPTION AS CATEGORY_DESCRIPTION,
CD.CPT_STATUS,ST.DESCRIPTION AS STATUS_DESCRIPTION,CD.ADMN_ID,CD.CLIENT_STATISFACTION,CD.REIMBURSEMENT
FROM COMPLAINT_DATA AS CD LEFT OUTER JOIN BROKERS AS BR 
JOIN PRODUCTS AS PR JOIN PRIORITIES AS PS 
JOIN STATUS AS ST JOIN CATEGORIES AS CAT 
JOIN SOURCES AS SS JOIN TYPES AS TY JOIN CUSTOMERS AS CUS JOIN REGIONS AS REG
WHERE CD.BROKER_ID = BR.BROKER_ID AND
      CD.PRODUCT_ID = PR.PRODUCT_NUMBER AND
      CD.CPT_PRIORITY_ID = PS.ID AND
      CD.CPT_STATUS = ST.ID AND
      CD.CPT_CATEGORY_ID = CAT.ID AND
      CD.CPT_SOURCE_ID = SS.ID AND
      CD.CPT_TYPE_ID = TY.ID AND
      CD.CUSTOMER_ID = CUS.CUSTOMER_ID AND
      CUS.REGION = REG.ID_NUMBER;

SELECT * FROM SS_COMPLAINTS_DATA;
